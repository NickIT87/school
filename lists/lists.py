# CRUD - create read update delete

# 1 CREATE: создадим 3 списка(массива), разными способами.
x = [1, 2, 3, 4, 5, 6, 7]       # задание списка перечислением
print(f"список х: {x}")

m = [i for i in range(7)]       # задание списка при помощи генератора выражений
print(f"список m: {m}")

l = list('spam')                # преобразование итерируемого объекта в список
print(f"список l: {l} \n")

# 2 READ: чтение данных в списке
print(f"Чтение данных в списке x[0]: { x[0] }")
print(f"Чтение данных в списке m[1]: { m[1] }")
print(f"Чтение данных в списке l[2]: { l[2] }")
print(f"Создание выборки после 3-го элемента массива: { x[2:] } \n")


# 3 UPDATE: обновление данных в списке
x[0] = 47
print(f"измененный список х: {x}")

x.append(l)     # добавление списка l в конец списка х
print(f"измененный список х: {x}")

l.insert(0, m)  # добавление списка m в начало списка l по значению индекса 0 в аргументе ф-ии insert
print(f"измененный список l: {l} \n")


# 4 DELETE: удаление данных из списка
m.pop()     # удаление элемента из конца списка
print(f"из списка m удален последний элемент: {m}")

m.remove(0)
print(f"из списка m удален элемент 0: {m} \n")


# функциональное программирование
print("Функциональное программирование, работа с массивами без использования циклов")

# пример работы со списками(массивами) без применения циклов
from functools import reduce    # импорт служебной ф-ии reduce

# объявление списка перечислением
numbers = [1,2,3,4,5,6]

# filter - фильтрует значения по заданному алгоритму анонимной ф-ии(lambda)
odd_numbers = list(filter(lambda n: n % 2 == 1, numbers))

# map - применяет алгоритм анонимной ф-ии(lambda) к каждому элементу массива
squared_odd_numbers = list(map(lambda n: n * n, odd_numbers))

# reduce - применяет анонимную ф-ю(lambda) к каждому элементу и 
# возвращает значение, получаемое комбинированием всех элементов.
total = reduce(lambda acc, n: acc + n, squared_odd_numbers)

# вывод значений
print(f"создадим список: {numbers}")
print(f"создадим выборку из нечетных элементов: {odd_numbers}")
print(f"вычисляем квадраты элементов выборки {squared_odd_numbers}")
print(f"Сумма квадратов выборки {total}")